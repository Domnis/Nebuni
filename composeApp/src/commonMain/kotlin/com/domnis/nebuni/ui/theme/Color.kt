/*
 * Nebuni
 * Copyright (c) 2025 Sylvain.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.domnis.nebuni.ui.theme
import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF6A548C)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFFECDCFF)
val onPrimaryContainerLight = Color(0xFF523C73)
val secondaryLight = Color(0xFF645A70)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFEBDEF7)
val onSecondaryContainerLight = Color(0xFF4C4357)
val tertiaryLight = Color(0xFF7F525B)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFFFD9DF)
val onTertiaryContainerLight = Color(0xFF643B44)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF93000A)
val backgroundLight = Color(0xFFFEF7FF)
val onBackgroundLight = Color(0xFF1D1A20)
val surfaceLight = Color(0xFFFFF8F5)
val onSurfaceLight = Color(0xFF221A15)
val surfaceVariantLight = Color(0xFFE8E0EB)
val onSurfaceVariantLight = Color(0xFF4A454E)
val outlineLight = Color(0xFF7B757F)
val outlineVariantLight = Color(0xFFCBC4CF)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF382E29)
val inverseOnSurfaceLight = Color(0xFFFFEDE5)
val inversePrimaryLight = Color(0xFFD6BBFC)
val surfaceDimLight = Color(0xFFE7D7CF)
val surfaceBrightLight = Color(0xFFFFF8F5)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFFFF1EA)
val surfaceContainerLight = Color(0xFFFCEBE2)
val surfaceContainerHighLight = Color(0xFFF6E5DC)
val surfaceContainerHighestLight = Color(0xFFF0DFD7)

val primaryLightMediumContrast = Color(0xFF412B61)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF79629C)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF3B3346)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF73697F)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF512A34)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF90606A)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF740006)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFCF2C27)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFEF7FF)
val onBackgroundLightMediumContrast = Color(0xFF1D1A20)
val surfaceLightMediumContrast = Color(0xFFFFF8F5)
val onSurfaceLightMediumContrast = Color(0xFF17100B)
val surfaceVariantLightMediumContrast = Color(0xFFE8E0EB)
val onSurfaceVariantLightMediumContrast = Color(0xFF39343D)
val outlineLightMediumContrast = Color(0xFF55515A)
val outlineVariantLightMediumContrast = Color(0xFF716B75)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF382E29)
val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE5)
val inversePrimaryLightMediumContrast = Color(0xFFD6BBFC)
val surfaceDimLightMediumContrast = Color(0xFFD3C3BB)
val surfaceBrightLightMediumContrast = Color(0xFFFFF8F5)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EA)
val surfaceContainerLightMediumContrast = Color(0xFFF6E5DC)
val surfaceContainerHighLightMediumContrast = Color(0xFFEADAD1)
val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC6)

val primaryLightHighContrast = Color(0xFF362056)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF543E76)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF30293C)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF4E455A)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF46212A)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF673D46)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF600004)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF98000A)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFEF7FF)
val onBackgroundLightHighContrast = Color(0xFF1D1A20)
val surfaceLightHighContrast = Color(0xFFFFF8F5)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFE8E0EB)
val onSurfaceVariantLightHighContrast = Color(0xFF000000)
val outlineLightHighContrast = Color(0xFF2E2B33)
val outlineVariantLightHighContrast = Color(0xFF4C4750)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF382E29)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFD6BBFC)
val surfaceDimLightHighContrast = Color(0xFFC5B6AE)
val surfaceBrightLightHighContrast = Color(0xFFFFF8F5)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE5)
val surfaceContainerLightHighContrast = Color(0xFFF0DFD7)
val surfaceContainerHighLightHighContrast = Color(0xFFE2D1C9)
val surfaceContainerHighestLightHighContrast = Color(0xFFD3C3BB)

val primaryDark = Color(0xFFD6BBFC)
val onPrimaryDark = Color(0xFF3B255B)
val primaryContainerDark = Color(0xFF523C73)
val onPrimaryContainerDark = Color(0xFFECDCFF)
val secondaryDark = Color(0xFFCEC2DB)
val onSecondaryDark = Color(0xFF352D40)
val secondaryContainerDark = Color(0xFF4C4357)
val onSecondaryContainerDark = Color(0xFFEBDEF7)
val tertiaryDark = Color(0xFFF1B7C2)
val onTertiaryDark = Color(0xFF4B252E)
val tertiaryContainerDark = Color(0xFF643B44)
val onTertiaryContainerDark = Color(0xFFFFD9DF)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF151218)
val onBackgroundDark = Color(0xFFE7E0E8)
val surfaceDark = Color(0xFF1A120D)
val onSurfaceDark = Color(0xFFF0DFD7)
val surfaceVariantDark = Color(0xFF4A454E)
val onSurfaceVariantDark = Color(0xFFCBC4CF)
val outlineDark = Color(0xFF958E99)
val outlineVariantDark = Color(0xFF4A454E)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFF0DFD7)
val inverseOnSurfaceDark = Color(0xFF382E29)
val inversePrimaryDark = Color(0xFF6A548C)
val surfaceDimDark = Color(0xFF1A120D)
val surfaceBrightDark = Color(0xFF413731)
val surfaceContainerLowestDark = Color(0xFF140D08)
val surfaceContainerLowDark = Color(0xFF221A15)
val surfaceContainerDark = Color(0xFF261E19)
val surfaceContainerHighDark = Color(0xFF312823)
val surfaceContainerHighestDark = Color(0xFF3D332D)

val primaryDarkMediumContrast = Color(0xFFE8D5FF)
val onPrimaryDarkMediumContrast = Color(0xFF2F1A4F)
val primaryContainerDarkMediumContrast = Color(0xFF9E86C2)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFE4D7F1)
val onSecondaryDarkMediumContrast = Color(0xFF2A2235)
val secondaryContainerDarkMediumContrast = Color(0xFF978CA3)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFFFD1D9)
val onTertiaryDarkMediumContrast = Color(0xFF3E1A23)
val tertiaryContainerDarkMediumContrast = Color(0xFFB7838D)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFD2CC)
val onErrorDarkMediumContrast = Color(0xFF540003)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF151218)
val onBackgroundDarkMediumContrast = Color(0xFFE7E0E8)
val surfaceDarkMediumContrast = Color(0xFF1A120D)
val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkMediumContrast = Color(0xFF4A454E)
val onSurfaceVariantDarkMediumContrast = Color(0xFFE2DAE5)
val outlineDarkMediumContrast = Color(0xFFB6AFBA)
val outlineVariantDarkMediumContrast = Color(0xFF948E98)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFF0DFD7)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF312823)
val inversePrimaryDarkMediumContrast = Color(0xFF533D74)
val surfaceDimDarkMediumContrast = Color(0xFF1A120D)
val surfaceBrightDarkMediumContrast = Color(0xFF4D423C)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0603)
val surfaceContainerLowDarkMediumContrast = Color(0xFF241C17)
val surfaceContainerDarkMediumContrast = Color(0xFF2F2621)
val surfaceContainerHighDarkMediumContrast = Color(0xFF3A312B)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF463C36)

val primaryDarkHighContrast = Color(0xFFF7ECFF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFD2B7F7)
val onPrimaryContainerDarkHighContrast = Color(0xFF13002F)
val secondaryDarkHighContrast = Color(0xFFF7ECFF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFCABED7)
val onSecondaryContainerDarkHighContrast = Color(0xFF0F0819)
val tertiaryDarkHighContrast = Color(0xFFFFEBEE)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFEDB4BF)
val onTertiaryContainerDarkHighContrast = Color(0xFF1D0209)
val errorDarkHighContrast = Color(0xFFFFECE9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
val onErrorContainerDarkHighContrast = Color(0xFF220001)
val backgroundDarkHighContrast = Color(0xFF151218)
val onBackgroundDarkHighContrast = Color(0xFFE7E0E8)
val surfaceDarkHighContrast = Color(0xFF1A120D)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF4A454E)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
val outlineDarkHighContrast = Color(0xFFF6EDF9)
val outlineVariantDarkHighContrast = Color(0xFFC7C0CB)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFF0DFD7)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF533D74)
val surfaceDimDarkHighContrast = Color(0xFF1A120D)
val surfaceBrightDarkHighContrast = Color(0xFF594E48)
val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
val surfaceContainerLowDarkHighContrast = Color(0xFF261E19)
val surfaceContainerDarkHighContrast = Color(0xFF382E29)
val surfaceContainerHighDarkHighContrast = Color(0xFF443934)
val surfaceContainerHighestDarkHighContrast = Color(0xFF4F453F)